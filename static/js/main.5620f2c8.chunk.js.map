{"version":3,"sources":["images/eth-diamond-rainbow.png","images/droplet-logo.svg","images/ethHubLogo.png","images/x.svg","images/approve-contract.svg","utils/contractFunctions.js","utils/helperFunctions.js","components/Modal/DepositModal.js","components/Modal/WithdrawModal.js","App.js","index.js","images/clock.svg","images/check-mark.svg"],"names":["module","exports","strategyContract","poolContract","IntoEthToken","DaiToken","TicketToken","addressShortener","address","undefined","slice","txHashShortener","txHash","length","PRIZE_POOL_ADDRESS","TICKET_TOKEN_ADDRESS","initializeContracts","providerz","a","provider","ethers","providers","Web3Provider","signer","getSigner","getAddress","userAddress","Contract","PodPrizeStratAbi","abi","PodPrizePoolAbi","IntoEthTokenAbi","ERC20Abi","Error","getTotalTicketCount","totalSupply","result","utils","formatUnits","console","log","getPrizePeriodRemaining","prizePeriodRemainingSeconds","totalTimeSeconds","days","Math","floor","hours","minutes","getCurrentNftPrizes","getAwardErc721TokenIds","idArray","name","description","attributes","trait_type","value","tokenURI","ipfsHash","axios","get","data","getERC20Balance","type","tokenContract","balanceOf","weiBalance","formattedBal","roundedBal","parseFloat","toFixed","getERC20Allowance","window","alert","allowance","approveToken","setScene","weiValue","parseUnits","approve","approveTx","wait","depositDaiToPool","setTxHash","setShortTxHash","loadErc20Data","depositTo","depositTx","hash","shortTxHash","setTimeout","withdrawDaiFromPool","maxFee","toString","weiMaxFee","withdrawInstantlyFrom","withdrawTx","Modal","props","daiBalance","depositModalState","closeDepositModal","depositScene","setDepositScene","useState","depositAmount","setDepositAmount","confirmDepositDai","className","onClick","src","X","alt","role","aria-label","approveImage","placeholder","onChange","e","target","clock","rel","href","check","ticketBalance","withdrawModalState","closeWithdrawModal","withdrawScene","setWithdrawScene","withdrawAmount","setWithdrawAmount","confirmWithdrawDai","providerOptions","portis","package","Portis","options","id","process","metamask","web3Modal","Web3Modal","network","cacheProvider","theme","background","main","secondary","border","hover","App","setAddress","shortAddress","setShortAddress","walletConnected","setWalletConnected","setDaiBalance","setTicketBalance","daiAllowance","setDaiAllowance","ticketAllowance","setTicketAllowance","setTotalSupply","timeRemaining","setTimeRemaining","episodeData","setEpidsodeData","setDepositModalState","setWithdrawModalState","connectWallet","connect","loadContractData","on","accounts","shortAd","loadNftData","ethereum","networkVersion","isMetaMask","newTimeRemaining","ticketBalanceResult","daiBalanceResult","ticketAllowanceResult","daiAllowanceResult","newTotalSupply","newEpisodeData","logo","ethLogo","ethHubLogo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5620f2c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eth-diamond-rainbow.c7be19d8.png\";","module.exports = __webpack_public_path__ + \"static/media/droplet-logo.6387d0c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/ethHubLogo.283623ab.png\";","module.exports = __webpack_public_path__ + \"static/media/x.7be246d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/approve-contract.68ae8a6c.svg\";","import ethers from \"ethers\";\nimport axios from \"axios\";\n\n// ABIs\nimport PodPrizeStratAbi from \"./abis/PodPoolStratV2.json\";\nimport PodPrizePoolAbi from \"./abis/PrizePool.json\";\nimport IntoEthTokenAbi from \"./abis/IntoTheEther.json\";\nimport ERC20Abi from \"./abis/ERC20.json\";\n\n// Helper Function\nimport { txHashShortener } from \"./helperFunctions\";\n\n// Contracts\nlet strategyContract;\nlet poolContract;\nlet IntoEthToken;\nlet DaiToken;\nlet TicketToken;\n\n// Contract Addresses (Rinkey);\nconst PRIZE_STRAT_ADDRESS = \"0xDf577189ad9659070D903d1a7A22d0Fb9E07f2f8\";\nconst PRIZE_POOL_ADDRESS = \"0x65D16e7C4A7CB9D8Fa2D8Bbe55916FfB6Efe87fD\";\nconst INTO_ETH_TOKEN_ADDRESS = \"0x6325764783626E233F5ff4f2D8D1F2bcCD9d6105\";\nconst DAI_TOKEN_ADDRESS = \"0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea\";\nconst TICKET_TOKEN_ADDRESS = \"0x8bEa329655C9809355922Ac70fd4B0E51ce3FBd8\";\n\nconst REFERRER_ADDRESS = \"0xec8b449D4cedcc1BF688EAA40B7dFafd6d2D00DC\";\n\nexport const initializeContracts = async (providerz) => {\n    try {\n        const provider = new ethers.providers.Web3Provider(providerz);\n        const signer = provider.getSigner();\n        const userAddress = await signer.getAddress();\n        strategyContract = new ethers.Contract(\n            PRIZE_STRAT_ADDRESS,\n            PodPrizeStratAbi.abi,\n            signer\n        );\n        poolContract = new ethers.Contract(\n            PRIZE_POOL_ADDRESS,\n            PodPrizePoolAbi.abi,\n            signer\n        );\n        IntoEthToken = new ethers.Contract(\n            INTO_ETH_TOKEN_ADDRESS,\n            IntoEthTokenAbi.abi,\n            signer\n        );\n        DaiToken = new ethers.Contract(DAI_TOKEN_ADDRESS, ERC20Abi.abi, signer);\n        TicketToken = new ethers.Contract(\n            TICKET_TOKEN_ADDRESS,\n            ERC20Abi.abi,\n            signer\n        );\n        return userAddress;\n    } catch (error) {\n        throw new Error(`No injected ethereum provider: ${error}`);\n    }\n};\n\nexport const getTotalTicketCount = async () => {\n    try {\n        const result = await TicketToken.totalSupply();\n        return ethers.utils.formatUnits(result, 18);\n    } catch (error) {\n        console.log(error);\n        return \"Total Ticket Error\";\n    }\n};\n\nexport const getPrizePeriodRemaining = async () => {\n    try {\n        const totalTimeSeconds = await strategyContract.prizePeriodRemainingSeconds();\n        const days = Math.floor(totalTimeSeconds / (3600 * 24));\n        const hours = Math.floor(totalTimeSeconds / 3600 - days * 24);\n        const minutes = Math.floor(\n            totalTimeSeconds / 60 - (days * 24 * 60 + hours * 60)\n        );\n        return `${days}d ${hours}h ${minutes}m`;\n    } catch (error) {\n        console.log(error);\n        return \"Time Remaining Error\";\n    }\n};\n\nexport const getCurrentNftPrizes = async () => {\n    try {\n        const idArray = await strategyContract.getAwardErc721TokenIds(\n            INTO_ETH_TOKEN_ADDRESS\n        );\n        if (idArray.length === 0)\n            return {\n                name: \"New Prize Comming Soon\",\n                description: \"\",\n                attributes: [\n                    { trait_type: \"Date\", value: \"\" },\n                    { trait_type: \"Duration\", value: \"\" },\n                ],\n            };\n        let ipfsHash = await IntoEthToken.tokenURI(idArray[0]);\n        ipfsHash = ipfsHash.slice(12); // remove the url from the hash\n        const result = await axios.get(\n            `https://ipfs.infura.io/ipfs/${ipfsHash}`\n        );\n        return result.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getERC20Balance = async (type, userAddress) => {\n    let tokenContract;\n    if (type === undefined || userAddress === undefined) {\n        console.log(\"Invalid type or address provided\");\n    }\n    type === \"DAI\" ? (tokenContract = DaiToken) : (tokenContract = TicketToken);\n    try {\n        const weiBalance = await tokenContract.balanceOf(userAddress);\n        const formattedBal = ethers.utils.formatUnits(weiBalance, 18);\n        const roundedBal = parseFloat(formattedBal).toFixed(2);\n        return roundedBal;\n    } catch (error) {\n        console.log(error);\n        return `Balance Error for ${type}`;\n    }\n};\n\nexport const getERC20Allowance = async (type, userAddress) => {\n    let tokenContract;\n    if (type === undefined || userAddress === undefined) {\n        console.log(\"Invalid type or address provided\");\n    }\n    if (type === \"DAI\") tokenContract = DaiToken;\n    else if (type === \"EHM\") tokenContract = TicketToken;\n    else return window.alert(\"Error Invalid Token Type\");\n\n    try {\n        const weiBalance = await tokenContract.allowance(\n            userAddress,\n            PRIZE_POOL_ADDRESS\n        );\n        const formattedBal = ethers.utils.formatUnits(weiBalance, 18);\n        const roundedBal = parseFloat(formattedBal).toFixed(2);\n        return roundedBal;\n    } catch (error) {\n        console.log(error);\n        return `Balance Error for ${type}`;\n    }\n};\n\nexport const approveToken = async (type, setScene) => {\n    let tokenContract;\n    if (type === undefined) {\n        console.log(\"Invalid type\");\n    }\n\n    if (type === \"DAI\") tokenContract = DaiToken;\n    else if (type === \"EHM\") tokenContract = TicketToken;\n    else return window.alert(\"Error Invalid Token Type\");\n\n    try {\n        const weiValue = ethers.utils.parseUnits(\"1000000\", 18);\n        const approveTx = await tokenContract.approve(\n            PRIZE_POOL_ADDRESS,\n            weiValue\n        );\n        setScene(1);\n        await approveTx.wait();\n    } catch (error) {\n        console.log(error);\n        window.alert(\"Erorr granting allowance\");\n    }\n};\n\nexport const depositDaiToPool = async (\n    userAddress,\n    value,\n    setScene,\n    setTxHash,\n    setShortTxHash,\n    loadErc20Data\n) => {\n    try {\n        const weiValue = ethers.utils.parseUnits(value, 18);\n        const depositTx = await poolContract.depositTo(\n            userAddress,\n            weiValue,\n            TICKET_TOKEN_ADDRESS,\n            REFERRER_ADDRESS\n        );\n        setTxHash(depositTx.hash);\n        const shortTxHash = txHashShortener(depositTx.hash);\n        setShortTxHash(shortTxHash);\n        setScene(2);\n        await depositTx.wait();\n        setScene(3);\n        setTimeout(loadErc20Data(userAddress), 5000); // give time to wait for tx to settle\n    } catch (error) {\n        console.log(error);\n        window.alert(\"There was an error depositing the Dai\");\n    }\n};\n\nexport const withdrawDaiFromPool = async (\n    userAddress,\n    value,\n    setScene,\n    setTxHash,\n    setShortTxHash,\n    loadErc20Data\n) => {\n    try {\n        const weiValue = ethers.utils.parseUnits(value, 18);\n\n        //Max fee that the user is willing to pay if withdraw early\n        const maxFee = (+value * 0.1).toString();\n        const weiMaxFee = ethers.utils.parseUnits(maxFee, 18);\n        const withdrawTx = await poolContract.withdrawInstantlyFrom(\n            userAddress,\n            weiValue,\n            TICKET_TOKEN_ADDRESS,\n            weiMaxFee\n        );\n        setTxHash(withdrawTx.hash);\n        const shortTxHash = txHashShortener(withdrawTx.hash);\n        setShortTxHash(shortTxHash);\n        setScene(2);\n        await withdrawTx.wait();\n        setScene(3);\n        setTimeout(loadErc20Data(userAddress), 5000); // give time to wait for tx to settle\n    } catch (error) {\n        console.log(error);\n        window.alert(\"There was an error withdrawing the Dai\");\n    }\n};\n","import axios from \"axios\";\n\nexport const getNftDataFromIpfs = async (hashArray) => {\n    const episodeDataArray = [];\n    hashArray.forEach(async (ipfsHash) => {\n        try {\n            const episodeData = await axios.get(\n                `https://ipfs.infura.io/ipfs/${ipfsHash}`\n            );\n            episodeDataArray.push(episodeData);\n        } catch (error) {\n            console.log(error);\n        }\n    });\n    return episodeDataArray;\n};\n\nexport const addressShortener = (address) => {\n    if (address === undefined) return \"0x00000\";\n    const shortAddress = `${address.slice(0, 6)}...${address.slice(37, 42)}`;\n    return shortAddress;\n};\n\nexport const txHashShortener = (txHash) => {\n    if (txHash === undefined) return \"0x00000\";\n    const shortTxHash = `${txHash.slice(0, 5)}...${txHash.slice(\n        txHash.length - 3,\n        txHash.length\n    )}`;\n    return shortTxHash;\n};\n","import React, { useState } from \"react\";\nimport \"./Modal.scss\";\n\n// Images\nimport X from \"../../images/x.svg\";\nimport approveImage from \"../../images/approve-contract.svg\";\nimport clock from \"../../images/clock.svg\";\nimport check from \"../../images/check-mark.svg\";\n\nimport { approveToken, depositDaiToPool } from \"../../utils/contractFunctions\";\n\nexport default function Modal(props) {\n    const {\n        daiBalance,\n        depositModalState,\n        closeDepositModal,\n        depositScene,\n        setDepositScene,\n        userAddress,\n        loadErc20Data,\n    } = props;\n    const [txHash, setTxHash] = useState(\"0xcccc222cf1faaa1111111111122222\");\n    const [shortTxHash, setShortTxHash] = useState(\"0x43a...32B\");\n    const [depositAmount, setDepositAmount] = useState(\"0\");\n\n    const confirmApproveDai = () => {\n        approveToken(\"DAI\", setDepositScene);\n    };\n\n    const handleChange = (e) => {\n        let value = e.target.value;\n        value.toString();\n        setDepositAmount(value);\n    };\n\n    const confirmDepositDai = async () => {\n        await depositDaiToPool(\n            userAddress,\n            depositAmount,\n            setDepositScene,\n            setTxHash,\n            setShortTxHash,\n            loadErc20Data\n        );\n    };\n\n    if (!depositModalState) return null;\n\n    switch (depositScene) {\n        case 0:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeDepositModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Approve Dai{\" \"}\n                                <span role=\"img\" aria-label=\"check-mark\">\n                                    ✅\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <img src={approveImage} alt=\"unlock\" />\n                        </div>\n                        <div className=\"footer\">\n                            <button onClick={confirmApproveDai}>Confirm</button>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        case 1:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeDepositModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Deposit Dai{\" \"}\n                                <span role=\"img\" aria-label=\"fire\">\n                                    🔥\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <input\n                                placeholder=\"Amount\"\n                                type=\"number\"\n                                onChange={handleChange}\n                            ></input>\n                            <p>Balance: {daiBalance} DAI</p>\n                        </div>\n                        <div className=\"footer\">\n                            <button onClick={confirmDepositDai}>Confirm</button>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        case 2:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeDepositModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Tx Submitted{\" \"}\n                                <span role=\"img\" aria-label=\"hour-glass\">\n                                    ⏳\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <p>Waiting for Confirmations</p>\n                            <img src={clock} alt=\"unlock\" />\n                            <a\n                                className=\"txHash\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={`https://rinkeby.etherscan.io/tx/${txHash}`}\n                            >\n                                Tx Hash:{shortTxHash}{\" \"}\n                                <span role=\"img\" aria-label=\"link\">\n                                    🔗\n                                </span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        case 3:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeDepositModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Deposit Successful{\" \"}\n                                <span role=\"img\" aria-label=\"confetti\">\n                                    🎊\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <img src={check} alt=\"unlock\" />\n                            <a\n                                className=\"txHash\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={`https://rinkeby.etherscan.io/tx/${txHash}`}\n                            >\n                                Tx Hash: {shortTxHash}{\" \"}\n                                <span role=\"img\" aria-label=\"link\">\n                                    🔗\n                                </span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        default:\n            break;\n    }\n}\n","import React, { useState } from \"react\";\nimport \"./Modal.scss\";\n\n// Images\nimport X from \"../../images/x.svg\";\nimport approveImage from \"../../images/approve-contract.svg\";\nimport clock from \"../../images/clock.svg\";\nimport check from \"../../images/check-mark.svg\";\n\nimport {\n    approveToken,\n    withdrawDaiFromPool,\n} from \"../../utils/contractFunctions\";\n\nexport default function Modal(props) {\n    const {\n        ticketBalance,\n        withdrawModalState,\n        closeWithdrawModal,\n        withdrawScene,\n        setWithdrawScene,\n        userAddress,\n        loadErc20Data,\n    } = props;\n    const [txHash, setTxHash] = useState(\"0xcccc222cf1faaa1111111111122222\");\n    const [shortTxHash, setShortTxHash] = useState(\"0x43a...32B\");\n    const [withdrawAmount, setWithdrawAmount] = useState(\"0\");\n\n    const confirmApproveTicket = () => {\n        approveToken(\"EHM\", setWithdrawScene);\n    };\n\n    const handleChange = (e) => {\n        let value = e.target.value;\n        value.toString();\n        setWithdrawAmount(value);\n    };\n\n    const confirmWithdrawDai = async () => {\n        await withdrawDaiFromPool(\n            userAddress,\n            withdrawAmount,\n            setWithdrawScene,\n            setTxHash,\n            setShortTxHash,\n            loadErc20Data\n        );\n    };\n\n    if (!withdrawModalState) return null;\n\n    switch (withdrawScene) {\n        case 0:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeWithdrawModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Approve Ticket{\" \"}\n                                <span role=\"img\" aria-label=\"ticket\">\n                                    🎟\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <img src={approveImage} alt=\"unlock\" />\n                        </div>\n                        <div className=\"footer\">\n                            <button onClick={confirmApproveTicket}>\n                                Confirm\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        case 1:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeWithdrawModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Withdraw Dai{\" \"}\n                                <span role=\"img\" aria-label=\"fire\">\n                                    🔥\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <input\n                                placeholder=\"Amount\"\n                                type=\"number\"\n                                onChange={handleChange}\n                            ></input>\n                            <p>Limit: {ticketBalance} DAI</p>\n                        </div>\n                        <div className=\"footer\">\n                            <button onClick={confirmWithdrawDai}>\n                                Confirm\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        case 2:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeWithdrawModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Tx Submitted{\" \"}\n                                <span role=\"img\" aria-label=\"hour-glass\">\n                                    ⏳\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <p>Waiting for Confirmations</p>\n                            <img src={clock} alt=\"unlock\" />\n                            <a\n                                className=\"txHash\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={`https://rinkeby.etherscan.io/tx/${txHash}`}\n                            >\n                                Tx Hash:{shortTxHash}{\" \"}\n                                <span role=\"img\" aria-label=\"link\">\n                                    🔗\n                                </span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        case 3:\n            return (\n                <div className=\"modal-wrapper\">\n                    <div className=\"modal\">\n                        <button\n                            className=\"exit-btn\"\n                            onClick={closeWithdrawModal}\n                        >\n                            <img src={X} alt=\"x\" />\n                        </button>\n                        <div className=\"header\">\n                            <p>\n                                Withdraw Successful{\" \"}\n                                <span role=\"img\" aria-label=\"confetti\">\n                                    🎊\n                                </span>\n                            </p>\n                            <div className=\"white-line\"></div>\n                        </div>\n                        <div className=\"body\">\n                            <img src={check} alt=\"unlock\" />\n                            <a\n                                className=\"txHash\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={`https://rinkeby.etherscan.io/tx/${txHash}`}\n                            >\n                                Tx Hash: {shortTxHash}{\" \"}\n                                <span role=\"img\" aria-label=\"link\">\n                                    🔗\n                                </span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        default:\n            break;\n    }\n}\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport logo from \"./images/droplet-logo.svg\";\nimport ethLogo from \"./images/eth-diamond-rainbow.png\";\nimport ethHubLogo from \"./images/ethHubLogo.png\";\n\nimport DepositModal from \"./components/Modal/DepositModal\";\nimport WithdrawModal from \"./components/Modal/WithdrawModal\";\nimport Web3Modal from \"web3modal\";\nimport Portis from \"@portis/web3\";\n\nimport {\n    initializeContracts,\n    getERC20Balance,\n    getPrizePeriodRemaining,\n    getTotalTicketCount,\n    getCurrentNftPrizes,\n    getERC20Allowance,\n} from \"./utils/contractFunctions\";\nimport { addressShortener } from \"./utils/helperFunctions\";\n\nconst providerOptions = {\n    portis: {\n        package: Portis,\n        options: {\n            id: process.env.REACT_APP_PORTIS_ID,\n        },\n    },\n    metamask: {},\n};\n\nconst web3Modal = new Web3Modal({\n    network: \"rinkeby\",\n    cacheProvider: false,\n    providerOptions,\n    theme: {\n        background: \"rgb(39, 49, 56)\",\n        main: \"rgb(199, 199, 199)\",\n        secondary: \"rgb(136, 136, 136)\",\n        border: \"rgba(195, 195, 195, 0.14)\",\n        hover: \"black\",\n    },\n});\n\nfunction App() {\n    const [address, setAddress] = useState(\"\");\n    const [shortAddress, setShortAddress] = useState(\"\");\n    const [walletConnected, setWalletConnected] = useState(false);\n\n    const [daiBalance, setDaiBalance] = useState(\"0\");\n    const [ticketBalance, setTicketBalance] = useState(\"0\");\n    const [daiAllowance, setDaiAllowance] = useState(\"0\");\n    const [ticketAllowance, setTicketAllowance] = useState(\"0\");\n\n    const [totalSupply, setTotalSupply] = useState(\"0\");\n    const [timeRemaining, setTimeRemaining] = useState(\"0\");\n    const [episodeData, setEpidsodeData] = useState({\n        name: \"Loading...\",\n        description: \"\",\n        attributes: [\n            { trait_type: \"Date\", value: \"\" },\n            { trait_type: \"Duration\", value: \"\" },\n        ],\n    });\n    const [depositModalState, setDepositModalState] = useState(false);\n    const [depositScene, setDepositScene] = useState(0);\n\n    const [withdrawModalState, setWithdrawModalState] = useState(false);\n    const [withdrawScene, setWithdrawScene] = useState(0);\n\n    const connectWallet = async () => {\n        let provider;\n        // await web3Modal.clearCachedProvider();\n        try {\n            provider = await web3Modal.connect();\n            loadContractData(provider);\n        } catch (erorr) {\n            console.log(\"Could not get a wallet connection\", erorr);\n            return;\n        }\n\n        provider.on(\"accountsChanged\", async (accounts) => {\n            if (accounts[0] === undefined) {\n                setWalletConnected(false);\n                setShortAddress(\"\");\n                setAddress(\"\");\n            }\n            const userAddress = accounts[0];\n            const shortAd = addressShortener(userAddress);\n            loadErc20Data(userAddress);\n            await loadNftData();\n\n            setShortAddress(shortAd);\n            setAddress(userAddress);\n        });\n    };\n\n    const loadContractData = async (provider) => {\n        if (window.ethereum.networkVersion !== \"4\" && provider.isMetaMask)\n            return window.alert(\"Please change to Rinkeby\");\n        const userAddress = await initializeContracts(provider);\n\n        const shortAd = addressShortener(userAddress);\n        const newTimeRemaining = await getPrizePeriodRemaining();\n        loadErc20Data(userAddress);\n        await loadNftData();\n\n        setTimeRemaining(newTimeRemaining);\n        setShortAddress(shortAd);\n        setAddress(userAddress);\n        setWalletConnected(true);\n    };\n\n    const loadErc20Data = async (userAddress) => {\n        const ticketBalanceResult = await getERC20Balance(\"EHM\", userAddress);\n        const daiBalanceResult = await getERC20Balance(\"DAI\", userAddress);\n        const ticketAllowanceResult = await getERC20Allowance(\n            \"EHM\",\n            userAddress\n        );\n        const daiAllowanceResult = await getERC20Allowance(\"DAI\", userAddress);\n        const newTotalSupply = await getTotalTicketCount();\n\n        setTotalSupply(newTotalSupply);\n        setTicketBalance(ticketBalanceResult);\n        setTicketAllowance(ticketAllowanceResult);\n        setDaiAllowance(daiAllowanceResult);\n        setDaiBalance(daiBalanceResult);\n    };\n\n    const loadNftData = async () => {\n        const newEpisodeData = await getCurrentNftPrizes();\n        setEpidsodeData(newEpisodeData);\n    };\n\n    const openDepositModal = () => {\n        if (+daiAllowance > 0) {\n            setDepositScene(1);\n        }\n        setDepositModalState(true);\n    };\n\n    const closeDepositModal = () => {\n        setDepositScene(0);\n        setDepositModalState(false);\n    };\n\n    const openWithdrawModal = () => {\n        if (+ticketAllowance > 0) {\n            setWithdrawScene(1);\n        }\n        setWithdrawModalState(true);\n    };\n\n    const closeWithdrawModal = () => {\n        setWithdrawScene(0);\n        setWithdrawModalState(false);\n    };\n\n    return (\n        <div className=\"App\">\n            <DepositModal\n                depositModalState={depositModalState}\n                daiBalance={daiBalance}\n                closeDepositModal={closeDepositModal}\n                depositScene={depositScene}\n                setDepositScene={setDepositScene}\n                userAddress={address}\n                loadErc20Data={loadErc20Data}\n            />\n            <WithdrawModal\n                withdrawModalState={withdrawModalState}\n                ticketBalance={ticketBalance}\n                closeWithdrawModal={closeWithdrawModal}\n                setWithdrawScene={setWithdrawScene}\n                withdrawScene={withdrawScene}\n                userAddress={address}\n                loadErc20Data={loadErc20Data}\n            />\n            <div className=\"App__header\">\n                <div className=\"logo-container\">\n                    <img src={logo} alt=\"drop-logo\" />\n                    <h4>Podcast Pools</h4>\n                </div>\n                <a\n                    className=\"shortened-address\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://rinkeby.etherscan.io/address/${address}`}\n                >\n                    {shortAddress}\n                </a>\n            </div>\n            <div className=\"App__dashboard\">\n                <div\n                    className={\n                        walletConnected\n                            ? \"top-info\"\n                            : \"top-info top-info--lengthen\"\n                    }\n                >\n                    <div className=\"text--background-color\">\n                        <div className=\"text\">\n                            <h2>Into the Ether</h2>\n                            <p className=\"description-sentence\">\n                                A podcast focusing on all things Ethereum and\n                                DeFi.\n                            </p>\n                            <p className=\"description-paragraph\">\n                                This podcast features in-depth discussions with\n                                prominent guests in the space hosted by Eric\n                                Conner as well as weekly news recaps featuring\n                                Anthony Sassano.\n                            </p>\n                            <img\n                                className=\"eth-logo--mobile\"\n                                src={ethLogo}\n                                alt=\"ethLogo\"\n                            />\n                            {walletConnected ? (\n                                <div className=\"btn-container\">\n                                    <button\n                                        className=\"blue-btn\"\n                                        onClick={openDepositModal}\n                                    >\n                                        Deposit\n                                    </button>\n                                    <button\n                                        className=\"gray-btn\"\n                                        onClick={openWithdrawModal}\n                                    >\n                                        Withdraw\n                                    </button>\n                                </div>\n                            ) : (\n                                <div className=\"connect-wallet-container\">\n                                    <p>\n                                        Deposit DAI for a chance to win{\" \"}\n                                        <span role=\"img\" aria-label=\"surprise\">\n                                            🎉\n                                        </span>\n                                    </p>\n                                    <button\n                                        className=\"blue-btn\"\n                                        onClick={connectWallet}\n                                    >\n                                        Connect Wallet\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"eth-logo__container\">\n                            <img\n                                className=\"eth-logo--desktop\"\n                                src={ethLogo}\n                                alt=\"ethLogo\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                {walletConnected ? (\n                    <div>\n                        <div className=\"middle-info\">\n                            <div className=\"middle-block__text\">\n                                <h3>\n                                    Current Prize{\" \"}\n                                    <span role=\"img\" aria-label=\"trophy\">\n                                        🏆\n                                    </span>\n                                </h3>\n                                <div className=\"prizes\">\n                                    <img\n                                        className=\"ethhub-logo\"\n                                        src={ethHubLogo}\n                                        alt=\"ethHubLogo\"\n                                    />\n                                    <div className=\"prizes__text\">\n                                        <h5>{episodeData.name}</h5>\n                                        <p className=\"episode-info\">\n                                            {episodeData.description}\n                                        </p>\n                                        <p className=\"attribute\">\n                                            {`Release Date: ${episodeData.attributes[0].value}`}\n                                        </p>\n                                        <p className=\"attribute\">\n                                            {`Duration: ${episodeData.attributes[1].value}`}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"bottom-info\">\n                            <div className=\"main-text-container\">\n                                <div className=\"sub-text-container\">\n                                    <h6>\n                                        Total Tickets{\" \"}\n                                        <span role=\"img\" aria-label=\"ticket\">\n                                            🎟\n                                        </span>\n                                    </h6>\n                                    <p>{totalSupply} EHM</p>\n                                </div>\n                                <div className=\"sub-text-container\">\n                                    <h6>\n                                        Your Ticket Balance{\" \"}\n                                        <span role=\"img\" aria-label=\"balance\">\n                                            ⚖️\n                                        </span>\n                                    </h6>\n                                    <p>{ticketBalance} EHM</p>\n                                </div>\n                            </div>\n                            <div className=\"main-text-container \">\n                                <div className=\"sub-text-container\">\n                                    <h6>\n                                        Ending In{\" \"}\n                                        <span role=\"img\" aria-label=\"clock\">\n                                            🕒\n                                        </span>\n                                    </h6>\n                                    <p>{timeRemaining}</p>\n                                </div>\n                                <div className=\"sub-text-container\">\n                                    <h6>\n                                        Your Dai Balance{\" \"}\n                                        <span\n                                            role=\"img\"\n                                            aria-label=\"money-wings\"\n                                        >\n                                            💸\n                                        </span>\n                                    </h6>\n                                    <p>{daiBalance} DAI</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div></div>\n                )}\n            </div>\n            <div\n                className={\n                    walletConnected ? \"App__footer\" : \"App__footer--white\"\n                }\n            ></div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/clock.83ca0030.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-mark.38805e38.svg\";"],"sourceRoot":""}